{
    "Marque as assertivas corretas.": {
        "options": [
            "Quando a build estiver quebrada, não dê check-out do código mais recente do repositório de controle de versão.",
            "Para evitar builds quebradas, os desenvolvedores devem rodar uma compilação de integração em seu IDE de estação de trabalho local após concluir seus testes de unidade.",
            "Quando a build estiver quebrada, o desenvolvedor deve realizar o check-out do código mais recente do repositório de controle de versão.",
            "A build quebrada é responsabilidade do desenvolvedor que a gerou."
        ],
        "right_answers": [
            "Para evitar builds quebradas, os desenvolvedores devem rodar uma compilação de integração em seu IDE de estação de trabalho local após concluir seus testes de unidade.,",
            "Quando a build estiver quebrada, não dê check-out do código mais recente do repositório de controle de versão."
        ]
    },
    "Sobre soft skill, marque os itens corretos.": {
        "options": [
            "Alguns exemplos, são: comunicação, empatia, adaptação e resiliência.",
            "Dizem respeito a habilidades não técnicas que lidam com interações interpessoais e intrapessoais.",
            "Não estão relacionadas com traços de personalidade e inteligência emocional.",
            "As soft skills devem ser desenvolvidas apenas individualmente, e não em equipe.",
            "As soft skils são competências secundárias a uma equipe de desenvolvimento de software, pois não afetam o resultado final do produto."
        ],
        "right_answers": [
            "Dizem respeito a habilidades não técnicas que lidam com interações interpessoais e intrapessoais.,",
            "Alguns exemplos, são: comunicação, empatia, adaptação e resiliência."
        ]
    },
    "Sobre a disciplina de construção, marque as respostas corretas.": {
        "options": [
            "O termo construção de software se refere à criação detalhada de software funcional por meio de uma combinação de codificação, verificação, teste de unidade, teste de integração e depuração.",
            "A construção de software deve observar apenas o reuso e a utilização de padrões de construção",
            "O termo construção de software se refere à criação detalhada de software funcional e não funcional por meio de uma combinação de codificação, e da verificação.",
            "Na construção de software os requisitos não-funcionais não devem ser observados, pois não influenciam diretamente na solução.",
            "A disciplina de construção de software inclui: minimizar a complexidade, antecipar a mudança, construir para verificar, reuso e padrões de construção"
        ],
        "right_answers": [
            "O termo construção de software se refere à criação detalhada de software funcional por meio de uma combinação de codificação, verificação, teste de unidade, teste de integração e depuração.,",
            "A disciplina de construção de software inclui: minimizar a complexidade, antecipar a mudança, construir para verificar, reuso e padrões de construção"
        ]
    },
    "Sobre refatoração, marque os itens corretos.": {
        "options": [
            "Possui o objetivo de alterar a estrutura do código e o seu  comportamento.",
            "Possui o objetivo de aumentar a qualidade do código como um todo, facilitando o andamento e rapidez do projeto diretamente.",
            "Não deve ser realizada junto com teste, pois pode fazer com que os procedimentos de teste fiquem inválidos.",
            "Possui o objetivo de alterar a estrutura do código sem alterar o seu comportamento.",
            "É essencial para prevenir que o código se deteriore ao longo do tempo."
        ],
        "right_answers": [
            "Possui o objetivo de alterar a estrutura do código sem alterar o seu comportamento.,",
            "É essencial para prevenir que o código se deteriore ao longo do tempo.,",
            "Possui o objetivo de aumentar a qualidade do código como um todo, facilitando o andamento e rapidez do projeto diretamente."
        ]
    },
    "São objetivos da refatoração.": {
        "options": [
            "Aumentar a qualidade do código como um todo, por meio da alteração do seu comportamento.",
            "Ajudar no registro de bugs.",
            "Deixar o código mais limpo e organizado.",
            "Deixar o código com menos linhas.",
            "Ajudar no tratamento de bugs no código.",
            "Atualizar a estrutura interna do código e deixá-la de acordo com as mudanças feitas."
        ],
        "right_answers": [
            "Atualizar a estrutura interna do código e deixá-la de acordo com as mudanças feitas.,",
            "Deixar o código mais limpo e organizado.,",
            "Ajudar no tratamento de bugs no código."
        ]
    },
    "Sobre a revisão de código, marque os itens corretos.": {
        "options": [
            "Não possui a necessidade de ser realizada por uma pessoa diferente daquela que fez o código.",
            "Auxilia no compartilhamento de conhecimento entre os membros da equipe, assim como aumenta a responsabilidade coletiva.",
            "Deve ser realizada com tempo e calma para revisar, e entender o contexto do código.",
            "Deve sempre ser realizada entre pares fixos de desenvolvedores que devem ler o código fonte com o objetivo de assegurar a sua qualidade e aprender com o processo.",
            "É importante para que sejam identificadas as pessoas que cometeram os erros, para que possam corrigí-lo."
        ],
        "right_answers": [
            "",
            "Deve ser realizada com tempo e calma para revisar, e entender o contexto do código."
        ]
    },
    "Sobre Clean code, marque as características corretas.": {
        "options": [
            "Deve possuir o máximo de comentários possíveis. Todos os métodos, funções, classes e variáveis devem ser comentados.",
            "O código deve autoexplicativo (sem necessidade de comentários para compreender o código).",
            "Métodos e Classes devem ter uma única responsabilidade (princípio da responsabilidade única).",
            "Deve ser simples e direto e, quando necessário, possuir duplicidades.",
            "Parâmetros, Métodos, Funções, Classes e Variáveis possuem nomes significativos (que revela seu propósito)."
        ],
        "right_answers": [
            "O código deve autoexplicativo (sem necessidade de comentários para compreender o código).,",
            "Métodos e Classes devem ter uma única responsabilidade (princípio da responsabilidade única).,",
            "Parâmetros, Métodos, Funções, Classes e Variáveis possuem nomes significativos (que revela seu propósito)."
        ]
    },
    "Sobre a programação em pares, marque as respostas corretas.": {
        "options": [
            "É uma forma de revisão de código contínua e, geralmente, substitui a prática de revisão e inspeção de código.",
            "As parcerias devem ser mantidas fixas ou durante todo o período de uma sprint.",
            "Tende a diminuir a necessidade de refatoração e cria um ambiente mais colaborativo entre o time de desenvolvimento.",
            "Produz menos erros e bugs no código, e agiliza na criação de solução para falhas, pois são duas pessoas pensando no mesmo problema.",
            "As pessoas devem trabalhar em computadores diferentes, mas ao mesmo tempo."
        ],
        "right_answers": [
            "É uma forma de revisão de código contínua e, geralmente, substitui a prática de revisão e inspeção de código.,",
            "Produz menos erros e bugs no código, e agiliza na criação de solução para falhas, pois são duas pessoas pensando no mesmo problema.,",
            "Tende a diminuir a necessidade de refatoração e cria um ambiente mais colaborativo entre o time de desenvolvimento."
        ]
    },
    "Marque o(s) item(s) correto(s).": {
        "options": [
            "Para executar manualmente um Workflow da interface do usuário, utilize: workflow_dispatch",
            "Para acionar um Workflow para execução automática utilize: pull_request ou runs-on",
            "Para executar um Job em diferentes executores, dependendo do repositório, utilize: push",
            "Para controlar quantas execuções do Workflow ou Jobs podem ser executados ao mesmo tempo, utilize: concurrency"
        ],
        "right_answers": [
            "Para executar manualmente um Workflow da interface do usuário, utilize: workflow_dispatch,",
            "Para controlar quantas execuções do Workflow ou Jobs podem ser executados ao mesmo tempo, utilize: concurrency"
        ]
    },
    "São padrões gerais de TDD.": {
        "options": [
            "Mantenha uma lista de testes.",
            "Escreva um teste antes de escrever código de produção.",
            "Um teste não deve afetar a execução do outro.",
            "Teste seu software com testes automatizados.",
            "Comece a escrita do teste pelo método assert (...)."
        ],
        "right_answers": [
            "Teste seu software com testes automatizados.,",
            "Um teste não deve afetar a execução do outro.,",
            "Mantenha uma lista de testes.,",
            "Escreva um teste antes de escrever código de produção.,",
            "Comece a escrita do teste pelo método assert (...)."
        ]
    },
    "Marque a(s) resposta(s) correta(s). Ao utilizar um arquivo YAML em seu processo de Integração Contínua, no Git Actions:": {
        "options": [
            "A palavra-chave \"on\" permite definir os eventos que são acionados quando o Workflow é executado.",
            "A palavra-chave \"run\" diz ao evento para executar um comando no executor. Nesse caso, \"npm ci\" é usado para instalar os arquivos de software npm para o projeto.",
            "A palavra-chave \"steps\" agrupa todas as etapas que serão executadas como parte do \"check-links\" trabalho.",
            "A palavra-chave \"events\" agrupa todos os Jobs executados no arquivo de Workflow."
        ],
        "right_answers": [
            "A palavra-chave \"on\" permite definir os eventos que são acionados quando o Workflow é executado.,",
            "A palavra-chave \"steps\" agrupa todas as etapas que serão executadas como parte do \"check-links\" trabalho."
        ]
    },
    "Sobre as desvantagens da programação em pares, marque as respostas corretas.": {
        "options": [
            "As duas pessoas precisam estar engajadas no projeto e com o mesmo objetivo.",
            "Pode aumentar o custo devido a utilização de dois programadores, ao em vez de um.",
            "Facilidade em fugir da prática.",
            "Pode proporcionar mais atenção e foco no projeto por parte dos programadores durante a codificação.",
            "Pode ser cansativa para as duas pessoas.",
            "Possíveis problemas pessoais entre a equipe pode gerar em um desconforto na hora do trabalho.",
            "Proporciona troca de conhecimento entre os programadores ajudando a criar um código mais criativo e eficaz.",
            "Favorece uma maior padronização do código, já que ele está sendo desenvolvido em dupla."
        ],
        "right_answers": [
            "Pode aumentar o custo devido a utilização de dois programadores, ao em vez de um.,",
            "Facilidade em fugir da prática.,",
            "Pode ser cansativa para as duas pessoas.,",
            "Possíveis problemas pessoais entre a equipe pode gerar em um desconforto na hora do trabalho.,",
            "As duas pessoas precisam estar engajadas no projeto e com o mesmo objetivo."
        ]
    },
    "São benefícios da integração contínua:": {
        "options": [
            "Reduz riscos e evita a baixa qualidade de código.",
            "Todos os membros da equipe veem o que está acontecendo.",
            "Evita problemas de merge, fazendo pequenas integrações ao longo do tempo, apenas para sistemas complexos.",
            "Evita problemas de merge, fazendo pequenas integrações ao longo do tempo.",
            "Reduz o o feedback, a comunicação na equipe e a moral do time.",
            "Não serve para prevenir e descobrir problemas de integração mais cedo."
        ],
        "right_answers": [
            "Todos os membros da equipe veem o que está acontecendo.,",
            "Reduz riscos e evita a baixa qualidade de código.,",
            "Evita problemas de merge, fazendo pequenas integrações ao longo do tempo."
        ]
    },
    "Veja o código, a seguir, e marque o(s) item(s) correto(s)\n------------------------------------------------------------------------------------------------------\nname: CI/CD Workflow\non:\n  push:\n    branches:\n      - main\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v2\n    - name: Set up Node.js\n      uses: actions/setup-node@v2\n      with:\n        node-version: 14\n    - name: Install dependencies\n      run: npm ci\n    - name: Build the code\n      run: npm run build\n\n    - name: Test the code\n      run: npm test\n    - name: Deploy to production\n      if: success()\n      uses: actions/upload-artifact@v2\n      with:\n        name: Deployment Package\n        path: dist/\n----------------------------------------------------------------------------": {
        "options": [
            "Entre outras coisas, esse código: instala dependências; testa o código; e faz o deploy para produção (se tudo estiver correto).",
            "O workflow será executado sempre que houver uma push para a branch \"main\" do repositório.",
            "Nesta parte,\n-------------\n- name: Build the code\n  run: npm run build\n------------\nEstá sendo utilizado \"npm run build\" para configurar o Node js.",
            "Nesta parte, \n-----------------------------------------\n- name: Checkout code\n  uses: actions/checkout@v2\n----------------------------------------\nÉ utilizado \"actions/checkout@v2\" para instalar as dependências."
        ],
        "right_answers": [
            "O workflow será executado sempre que houver uma push para a branch \"main\" do repositório.,",
            "Entre outras coisas, esse código: instala dependências; testa o código; e faz o deploy para produção (se tudo estiver correto)."
        ]
    },
    "Em relação as cinco características de um produto íntegro, marque os itens corretos.": {
        "options": [
            "Simplicidade: geralmente, quanto mais simples o design do código, melhor. Padrões de projeto, quanto bem aplicados, são uma ótima maneira de implementar soluções simples para problemas complexos.",
            "Utilidade: mesmo quando uma funcionalidade passa a não ser útil para o seu usuário ele deve ser mantida.",
            "Sem repetição: o mesmo código não deve estar em dois lugares diferentes.",
            "Clareza: o código deve ser facilmente compreendido pelo seu desenvolvedor e, se for o caso, deve explicá-lo aos outros membros da equipe.",
            "Eficácia: o código deve atingir o objetivo pelo qual foi criado."
        ],
        "right_answers": [
            "Eficácia: o código deve atingir o objetivo pelo qual foi criado.,",
            "",
            ""
        ]
    },
    "Um código é simples, quanto:": {
        "options": [
            "Não contém a maior parte do seu código duplicado.",
            "Expressa todas as ideias necessárias.",
            "Possui a menor quantidade de classes, métodos e variáveis.",
            "Roda a maior parte do testes.",
            "Roda todos os testes.",
            "Possui a menor quantidade de linhas."
        ],
        "right_answers": [
            "Roda todos os testes.,",
            "Expressa todas as ideias necessárias.,",
            "Possui a menor quantidade de classes, métodos e variáveis."
        ]
    },
    "Sobre o Git Actions, marque as assertivas corretas.": {
        "options": [
            "São exemplos de Jobs: eventos que ocorrem no repositório do fluxo de trabalho; eventos que ocorrem fora do GitHub e acionam um evento \"repository_dispatch\" no GitHub.",
            "É possível configurar um Workflow para ser executado quando um push for feito para a banch padrão de seu repositório, quando um lançamento for criado ou quando um problema for aberto.",
            "Os Workflows são definidos no diretório .github/workflows em um repositório, sendo que, um repositório pode ter vários workflows.",
            "Os Workflows são definidos por um arquivo YAML com check-in em seu repositório, os quais serão executados quando acionados por um Job em seu repositório, não podendo ser acionados manualmente.",
            "Gatilhos de um Workflow são jobs que fazem com que um workflow seja executado.",
            "Um Workflow é um processo automatizado configurável que irá executar um ou mais jobs."
        ],
        "right_answers": [
            "Um Workflow é um processo automatizado configurável que irá executar um ou mais jobs. ,",
            "Os Workflows são definidos no diretório .github/workflows em um repositório, sendo que, um repositório pode ter vários workflows.,",
            "É possível configurar um Workflow para ser executado quando um push for feito para a banch padrão de seu repositório, quando um lançamento for criado ou quando um problema for aberto."
        ]
    },
    "Veja o código, a seguir, e marque a(s) opção(ões) correta(s):\n----------------------------------------------------\nname: Deploy to AWS Lambda\non:\n  push:\n    branches:\n      - main\nenv:\n  AWS_REGION: us-west-2\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout code\n      uses: actions/checkout@v2\n    - name: Set up Node.js\n      uses: actions/setup-node@v2\n      with:\n        node-version: 14\n    - name: Install dependencies\n      run: npm ci\n    - name: Build the code\n      run: npm run build\n    - name: Deploy to AWS Lambda\n      uses: aws-actions/lambda-deploy-function@v1\n      with:\n        function-name: my-lambda-function\n        region: ${{ env.AWS_REGION }}\n        package: dist/lambda.zip\n------------------------------------------------": {
        "options": [
            "\"steps\": define as etapas que serão executadas como parte desse job. Cada etapa é definida como um objeto dentro dessa seção.",
            "\"uses\": especifica o Job que será executado nesta etapa. Os Jobs são pacotes pré-construídos que realizam tarefas comuns, como verificar o código, configurar o Node.js, etc.",
            "\"runs-on\": especifica a plataforma na qual esse evento será executado. Neste caso, o evento será executado na última versão do Ubuntu.",
            "\"env\": especifica as variáveis de ambiente que serão disponibilizadas durante a execução do workflow. Neste exemplo, a variável de ambiente  \"AWS_REGION\" é definida com o valor \"us-west-2\"."
        ],
        "right_answers": [
            "\"env\": especifica as variáveis de ambiente que serão disponibilizadas durante a execução do workflow. Neste exemplo, a variável de ambiente  \"AWS_REGION\" é definida com o valor \"us-west-2\".,",
            "\"steps\": define as etapas que serão executadas como parte desse job. Cada etapa é definida como um objeto dentro dessa seção."
        ]
    }
}